name: Valgrind

on:
  workflow_dispatch:
  push:
    branches:
     - master
  pull_request:
    branches:
     - master
  release:
    types:
      - published

env:
  BUILD_TYPE: Debug

jobs:
  valgrind:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
           - name: Ubuntu GCC
             os: ubuntu-24.04
             compiler: gcc-13
             compilercxx: g++-13
           - name: Ubuntu Clang
             os: ubuntu-24.04
             compiler: clang
             compilercxx: clang++

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Restore vcpkg cache
      id: vcpkg-cache
      uses: TAServers/vcpkg-cache@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        prefix: ${{ matrix.os_dist.os }}_valgrind_vcpkg

    - name: Configure CMake ${{ matrix.os }}-${{ matrix.compilercxx }}
      env:
        VCPKG_FEATURE_FLAGS: "binarycaching" # Possibly redundant, but explicitly sets the binary caching feature flag
        VCPKG_BINARY_SOURCES: "clear;files,${{ steps.vcpkg-cache.outputs.path }},readwrite"
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
        CFLAGS: ${{ matrix.cflags }}
        CXXFLAGS: ${{ matrix.cxxflags }}
      run: |
        cmake -B ${{github.workspace}}/build \
            -DCOMPRESSED_IMAGE_BUILD_DOCS=OFF

    - name: Build ${{ matrix.os }}-${{ matrix.compilercxx }}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compilercxx }}
        CFLAGS: ${{ matrix.cflags }}
        CXXFLAGS: ${{ matrix.cxxflags }}
      run: |
          cmake --build ${{github.workspace}}/build \
            --config ${{env.BUILD_TYPE}} \
            --parallel $(getconf _NPROCESSORS_ONLN || sysctl -n hw.ncpu || echo %NUMBER_OF_PROCESSORS%)
      
    - name: Run Valgrind
      if: matrix.os == 'ubuntu-24.04'
      working-directory: ${{github.workspace}}/build/test
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind
        valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes ./compressed_image_test
      continue-on-error: false